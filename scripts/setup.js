#!/usr/bin/env node

const fs = require("fs")
const path = require("path")
const crypto = require("crypto")

console.log("üöÄ DevTea Setup Script")
console.log("======================\n")

// Check if .env.local already exists
const envPath = path.join(process.cwd(), ".env.local")
const envExamplePath = path.join(process.cwd(), ".env.local.example")

if (fs.existsSync(envPath)) {
  console.log("‚ö†Ô∏è  .env.local already exists!")
  console.log("   If you want to reset it, delete the file and run this script again.\n")
  process.exit(0)
}

// Generate JWT secret
const jwtSecret = crypto.randomBytes(64).toString("hex")

// Create .env.local from template
let envContent = ""

if (fs.existsSync(envExamplePath)) {
  envContent = fs.readFileSync(envExamplePath, "utf8")
  console.log("‚úÖ Using .env.local.example as template")
} else {
  // Fallback content if example doesn't exist
  envContent = `# DevTea Environment Variables
# Generated by setup script

# Google OAuth (Development - Replace with real values for production)
GOOGLE_CLIENT_ID=123456789-abcdefghijklmnop.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=GOCSPX-abcdefghijklmnopqrstuvwxyz

# Redis (Optional - Replace with real Redis URL for production)
REDIS_URL=rediss://default:AbCdEfGhIjKlMnOpQrStUvWxYz@us1-example-12345.upstash.io:6380

# JWT Secret (Generated)
JWT_SECRET=${jwtSecret}

# CORS (Development)
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Sentry (Optional)
SENTRY_DSN=https://abcdef123456@o123456.ingest.sentry.io/123456

# NextAuth (Optional)
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=${jwtSecret}

# Development Settings
NODE_ENV=development
DEBUG=true
MOCK_GOOGLE_AUTH=true
`
  console.log("‚úÖ Using fallback template")
}

// Replace JWT_SECRET placeholder if it exists
envContent = envContent.replace(/JWT_SECRET=.*/, `JWT_SECRET=${jwtSecret}`)
envContent = envContent.replace(/NEXTAUTH_SECRET=.*/, `NEXTAUTH_SECRET=${jwtSecret}`)

// Write .env.local
fs.writeFileSync(envPath, envContent)

console.log("‚úÖ Created .env.local with development configuration")
console.log(`‚úÖ Generated secure JWT secret: ${jwtSecret.substring(0, 16)}...`)
console.log("\nüìã Next Steps:")
console.log("   1. Run: npm run dev")
console.log("   2. Visit: http://localhost:3000")
console.log("   3. Test: http://localhost:3000/verify")
console.log("\nüîß For production:")
console.log("   1. Get real Google OAuth credentials")
console.log("   2. Set up Redis instance (optional)")
console.log("   3. Configure Sentry for error tracking (optional)")
console.log("   4. Update ALLOWED_ORIGINS for your domain")
console.log("\nüìñ See README.md for detailed setup instructions")
console.log("\nüéâ DevTea is ready for development!")
