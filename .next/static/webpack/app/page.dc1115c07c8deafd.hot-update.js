"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/websocket-client.ts":
/*!*********************************!*\
  !*** ./lib/websocket-client.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DevTeaWebSocketClient: function() { return /* binding */ DevTeaWebSocketClient; }\n/* harmony export */ });\nclass DevTeaWebSocketClient {\n    async connect() {\n        // Register user\n        await this.sendMessage(\"register\", {\n            userId: this.userId,\n            username: this.username\n        });\n        // Start polling for new messages and updates\n        this.startPolling();\n        this.onMessage({\n            type: \"connected\"\n        });\n    }\n    async sendMessage(type, data) {\n        try {\n            const response = await fetch(\"/api/websocket\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    type,\n                    data,\n                    userId: this.userId\n                })\n            });\n            const result = await response.json();\n            if (result.success && result.type) {\n                this.onMessage(result);\n            }\n            return result;\n        } catch (error) {\n            console.error(\"WebSocket send error:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    async joinRoom(roomId) {\n        this.currentRoom = roomId;\n        return this.sendMessage(\"join_room\", {\n            roomId\n        });\n    }\n    async createRoom(name, description) {\n        return this.sendMessage(\"create_room\", {\n            name,\n            description\n        });\n    }\n    async getRooms() {\n        return this.sendMessage(\"get_rooms\", {});\n    }\n    async sendChatMessage(content, type, roomId, recipientId) {\n        return this.sendMessage(\"send_message\", {\n            username: this.username,\n            content,\n            type,\n            roomId,\n            recipientId\n        });\n    }\n    async getMessages(type, roomId, recipientId) {\n        return this.sendMessage(\"get_messages\", {\n            type,\n            roomId,\n            recipientId\n        });\n    }\n    async editMessage(messageId, content, roomId, recipientId) {\n        return this.sendMessage(\"edit_message\", {\n            messageId,\n            content,\n            roomId,\n            recipientId\n        });\n    }\n    async deleteMessage(messageId, roomId, recipientId) {\n        return this.sendMessage(\"delete_message\", {\n            messageId,\n            roomId,\n            recipientId\n        });\n    }\n    async getOnlineUsers() {\n        return this.sendMessage(\"get_online_users\", {});\n    }\n    startPolling() {\n        // Poll for updates every 3 seconds to simulate real-time\n        this.pollInterval = setInterval(async ()=>{\n            try {\n                // Get latest messages for current room\n                if (this.currentRoom) {\n                    const result = await this.sendMessage(\"get_messages\", {\n                        type: \"room\",\n                        roomId: this.currentRoom\n                    });\n                    if (result.success && result.type === \"room_messages\") {\n                        this.onMessage({\n                            type: \"room_messages_update\",\n                            data: result.data\n                        });\n                    }\n                }\n                // Get online users\n                await this.getOnlineUsers();\n            } catch (error) {\n                console.error(\"Polling error:\", error);\n            }\n        }, 3000);\n    }\n    disconnect() {\n        if (this.pollInterval) {\n            clearInterval(this.pollInterval);\n            this.pollInterval = null;\n        }\n        this.onMessage({\n            type: \"disconnected\"\n        });\n    }\n    constructor(userId, username, onMessage){\n        this.pollInterval = null;\n        this.currentRoom = null;\n        this.userId = userId;\n        this.username = username;\n        this.onMessage = onMessage;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/websocket-client.ts\n"));

/***/ })

});